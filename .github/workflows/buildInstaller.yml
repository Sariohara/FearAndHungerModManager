name: NSIS Installer Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    container: debian:sid
    steps:
    - name: Checkout Code.
      uses: actions/checkout@v4
    - name: Install NSIS
      run: |
        bash -c 'echo "deb http://ftp.debian.org/debian unstable main contrib non-free" >> /etc/apt/sources.list.d/unstable.list'
        apt-get -y update
        apt-get -y install -t unstable nsis
    - name: Print NSIS version
      run: makensis ./installer/installer.nsi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_KEY}}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./installer/RPGModManagerInstall.exe
        asset_name: RPGModManagerInstall.exe
        asset_content_type: application/exe
    - name: upload darwin artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./installers/RPGModManagerInstall.exe
        asset_name: RPGModManagerInstall.exe
        asset_content_type: application/gzip
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./installer/RPGModManagerInstall.exe
        asset_name: RPGModManagerInstall.exe
        asset_content_type: application/zip
